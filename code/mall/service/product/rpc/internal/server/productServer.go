// Code generated by goctl. DO NOT EDIT!
// Source: product.proto

package server

import (
	"context"

	"mall/service/product/rpc/internal/logic"
	"mall/service/product/rpc/internal/svc"
	"mall/service/product/rpc/pb"
)

type ProductServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedProductServer
}

func NewProductServer(svcCtx *svc.ServiceContext) *ProductServer {
	return &ProductServer{
		svcCtx: svcCtx,
	}
}

func (s *ProductServer) Create(ctx context.Context, in *pb.CreateRequest) (*pb.CreateResponse, error) {
	l := logic.NewCreateLogic(ctx, s.svcCtx)
	return l.Create(in)
}

func (s *ProductServer) Update(ctx context.Context, in *pb.UpdateRequest) (*pb.UpdateResponse, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *ProductServer) Remove(ctx context.Context, in *pb.RemoveRequest) (*pb.RemoveResponse, error) {
	l := logic.NewRemoveLogic(ctx, s.svcCtx)
	return l.Remove(in)
}

func (s *ProductServer) Detail(ctx context.Context, in *pb.DetailRequest) (*pb.DetailResponse, error) {
	l := logic.NewDetailLogic(ctx, s.svcCtx)
	return l.Detail(in)
}
